void FibonacciTest(){
    {
        int n = 10
        Print("Program to print fibonacci #" . n . ":")

        int first = 1
        int second = 0
        int fibonacciNo = 1
        while(fibonacciNo < n) {
             int oldSecond = second
             second = second + first
             first = oldSecond
             Print("Fibonacci #" . fibonacciNo . " = " . second)
             fibonacciNo = fibonacciNo + 1
        }
        Save("code/DemoData.fdat")
    }
    Print("Last Fibonacci: " . second)
    Load("code/DemoData.fdat")
    Print("Last Fibonacci: " . second)
}



void arrayTest(){
    float[] floats = [1.2 2.9 1.8 5.1]
    Print(floats[0])
    floats[0] = 3.3
    Print(floats[0])
    Print(floats.length())
    floats.add(6.9)
    Print(floats)
    Print(floats.length())
    floats.remove(2)
    Print(floats)
}

void castingTest(){
    string data1 = Read()
    Print(int(data1))
    bool data2 = true
    Print(bool(string(!data2)))
}

void returnTest(){
    Print(1)
    if(true){
       Print(2)
       if(true){
            Print(3)
            return
            Print(4)
       }
       Print(5)
    }
    Print(6)
}

void funct(int a){
    Print(a)
    if(a>0){
        funct(a-1)
    }
}
//funct(10)


void fetchFeatureTest(){
    Print()
    int a = fetch "code\DataFile.fdat" line 2 field 2 delimedBy";;"
    Print(a)
}

int nthFibonacci(int n){
    if(n <= 2){
        return n
    }
    int fib1 = nthFibonacci(n-1)
    int fib2 = nthFibonacci(n-2)
    return fib1 + fib2
}

void printFibonacci(int limit){
    int fibonacciCounter = 1
    while(fibonacciCounter <= limit){
        Print("Fibonacci #" . fibonacciCounter . " = " . nthFibonacci(fibonacciCounter))
        fibonacciCounter = fibonacciCounter + 1
    }
}

void demo(){
    float c1 = 0.9
    Print("1st call")
    printFibonacci(int(10.2+c1))
    Print("2nd call")
    printFibonacci(15)
}

demo()


